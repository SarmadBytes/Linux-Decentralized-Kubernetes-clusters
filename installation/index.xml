<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installation on c3os</title>
    <link>https://c3os-io.github.io/c3os/installation/</link>
    <description>Recent content in Installation on c3os</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Feb 2022 17:56:26 +0100</lastBuildDate><atom:link href="https://c3os-io.github.io/c3os/installation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Device Pairing</title>
      <link>https://c3os-io.github.io/c3os/installation/device_pairing/</link>
      <pubDate>Wed, 09 Feb 2022 17:56:26 +0100</pubDate>
      
      <guid>https://c3os-io.github.io/c3os/installation/device_pairing/</guid>
      <description>Only the openSUSE variant supports automatic peer discovery and device pairing.
 For pairing a c3os node, you will use the c3os CLI which is downloadable as part of the releases from another machine, it will be used to pair and install a new node or join a node to an existing cluster.
Start the c3os ISO Download and mount the ISO in either baremetal or a VM that you wish to use as a node for your cluster.</description>
    </item>
    
    <item>
      <title>Automated installation</title>
      <link>https://c3os-io.github.io/c3os/installation/automated/</link>
      <pubDate>Wed, 09 Feb 2022 17:56:26 +0100</pubDate>
      
      <guid>https://c3os-io.github.io/c3os/installation/automated/</guid>
      <description>Automated installation is available as well aside of manual pairing.
A cloud-init of the following form can be supplied as a datasource (CDROM, cos.setup bootarg):
#cloud-init c3os: device: &amp;#34;/dev/sda&amp;#34; reboot: true poweroff: true offline: true # Required, for automated installations network_token: .... # extra configuration which will drive the installation automatically on first boot.
The installer will kick in automatically and reboot/poweroff if specified. Note, to trigger the automatic installation the offline field must be enabled.</description>
    </item>
    
    <item>
      <title>Manual installation</title>
      <link>https://c3os-io.github.io/c3os/installation/manual/</link>
      <pubDate>Wed, 09 Feb 2022 17:56:26 +0100</pubDate>
      
      <guid>https://c3os-io.github.io/c3os/installation/manual/</guid>
      <description>Manual installation is available as well aside of pairing and automated installation.
Default credentials If needed to connect over ssh, the system have an hardcoded username/password when booting from the LiveCD:
user: c3os pass: c3os  Note, after the installation the password login is disabled, so users and ssh keys to login must be configured via cloud-init.
 Login over SSH as the c3os user or via console with c3os:c3os and run:</description>
    </item>
    
    <item>
      <title>Configuration reference</title>
      <link>https://c3os-io.github.io/c3os/installation/configuration/</link>
      <pubDate>Wed, 09 Feb 2022 17:56:26 +0100</pubDate>
      
      <guid>https://c3os-io.github.io/c3os/installation/configuration/</guid>
      <description>A c3os node during pairing or either automated install can be configured via a single configuration file.
c3os: network_token: &amp;#34;....&amp;#34; # Device for offline installs device: &amp;#34;/dev/sda&amp;#34; # Reboot after installation reboot: true # Power off after installation poweroff: true # Set to true when installing without Pairing offline: true # Manually set node role. Available: master, worker. Defaults auto (none) role: &amp;#34;master&amp;#34; # User defined network-id. Can be used to have multiple clusters in the same network network_id: &amp;#34;dev&amp;#34; vpn: # EdgeVPN environment options DHCP: &amp;#34;true&amp;#34; # Disable DHT (for airgap) EDGEVPNDHT: &amp;#34;false&amp;#34; EDGEVPNMAXCONNS: &amp;#34;200&amp;#34; # If DHCP is false, it&amp;#39;s required to be given a specific node IP.</description>
    </item>
    
    <item>
      <title>Take over installation</title>
      <link>https://c3os-io.github.io/c3os/installation/takeover/</link>
      <pubDate>Wed, 09 Feb 2022 17:56:26 +0100</pubDate>
      
      <guid>https://c3os-io.github.io/c3os/installation/takeover/</guid>
      <description>c3os supports takeover installations, see also the cOS docs here are few summarized steps:
 From the Dedicated control panel (OVH, Hetzner, etc.), boot in rescue mode install docker and run for example:  export DEVICE=/dev/sda export IMAGE=quay.io/mudler/c3os:v1.21.4-19 # A url pointing to a valid cloud-init config file. E.g. as a gist at gists.github.com export CONFIG_FILE=... docker run --privileged -v $DEVICE:$DEVICE -ti $IMAGE cos-installer --config $CONFIG_FILE --no-cosign --no-verify --docker-image $IMAGE $DEVICE  Switch back to booting from HD and reboot  </description>
    </item>
    
    <item>
      <title>Examples</title>
      <link>https://c3os-io.github.io/c3os/installation/examples/</link>
      <pubDate>Wed, 09 Feb 2022 17:56:26 +0100</pubDate>
      
      <guid>https://c3os-io.github.io/c3os/installation/examples/</guid>
      <description>In the following section you can find example configuration files to achieve specific c3os setups.
Single node cluster By default c3os requires multiple nodes. As for the c3os decentralized nature, it requires co-ordination between at least 2 nodes to achieve consensus on IPs, network setting, etc.
In order to create single-node cluster, we need to force both the role and the ip by disabling DHCP:
c3os: network_token: &amp;#34;....&amp;#34; role: &amp;#34;master&amp;#34; vpn: # EdgeVPN environment options DHCP: &amp;#34;false&amp;#34; ADDRESS: &amp;#34;10.</description>
    </item>
    
  </channel>
</rss>
